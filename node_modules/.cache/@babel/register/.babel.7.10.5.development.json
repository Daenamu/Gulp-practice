{
  "{\"sourceRoot\":\"C:\\\\Users\\\\dheod\\\\Documents\\\\GitHub\\\\Gulp-practice\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dheod\\\\Documents\\\\GitHub\\\\Gulp-practice\",\"filename\":\"C:\\\\Users\\\\dheod\\\\Documents\\\\GitHub\\\\Gulp-practice\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dheod\\\\Documents\\\\GitHub\\\\Gulp-practice\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice",
      "filename": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.dev = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpBro = _interopRequireDefault(require(\"gulp-bro\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nvar _gulpGhPages = _interopRequireDefault(require(\"gulp-gh-pages\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    src: \"src/*.pug\",\n    dest: \"build\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"build/img\"\n  },\n  scss: {\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\",\n    watch: \"src/scss/**/*.scss\"\n  },\n  js: {\n    src: \"src/js/main.js\",\n    dest: \"build/js\",\n    watch: \"src/**/*.js\"\n  }\n};\n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build/\", \".publish\"]);\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe((0, _gulpAutoprefixer[\"default\"])({\n    cascade: false\n  })).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar js = function js() {\n  return _gulp[\"default\"].src(routes.js.src).pipe((0, _gulpBro[\"default\"])({\n    transform: [_babelify[\"default\"].configure({\n      presets: [\"@babel/preset-env\"]\n    })]\n  })).pipe(_gulp[\"default\"].dest(routes.js.dest));\n};\n\nvar ghdeploy = function ghdeploy() {\n  return _gulp[\"default\"].src(\"build/**/*\").pipe((0, _gulpGhPages[\"default\"])());\n};\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n};\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug);\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n\n  _gulp[\"default\"].watch(routes.scss.watch, styles);\n\n  _gulp[\"default\"].watch(routes.js.watch, js);\n};\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug, styles, js]);\n\nvar postDev = _gulp[\"default\"].parallel([webserver, watch]);\n\nvar build = _gulp[\"default\"].series([prepare, assets]);\n\nexports.build = build;\n\nvar dev = _gulp[\"default\"].series([build, postDev]);\n\nexports.dev = dev;\n\nvar deploy = _gulp[\"default\"].series([build, ghdeploy, clean]);\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJzY3NzIiwianMiLCJndWxwIiwicGlwZSIsImNsZWFuIiwic3R5bGVzIiwib24iLCJsb2dFcnJvciIsImNhc2NhZGUiLCJ0cmFuc2Zvcm0iLCJiYWJlbGlmeSIsImNvbmZpZ3VyZSIsInByZXNldHMiLCJnaGRlcGxveSIsIndlYnNlcnZlciIsImxpdmVyZWxvYWQiLCJvcGVuIiwicHJlcGFyZSIsInNlcmllcyIsImFzc2V0cyIsInBvc3REZXYiLCJwYXJhbGxlbCIsImJ1aWxkIiwiZGV2IiwiZGVwbG95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEscUJBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ1hDLEVBQUFBLEdBQUcsRUFBRTtBQUNEQyxJQUFBQSxLQUFLLEVBQUUsY0FETjtBQUVEQyxJQUFBQSxHQUFHLEVBQUUsV0FGSjtBQUdEQyxJQUFBQSxJQUFJLEVBQUU7QUFITCxHQURNO0FBTVhDLEVBQUFBLEdBQUcsRUFBRTtBQUNERixJQUFBQSxHQUFHLEVBQUMsV0FESDtBQUVEQyxJQUFBQSxJQUFJLEVBQUM7QUFGSixHQU5NO0FBVVhFLEVBQUFBLElBQUksRUFBRTtBQUNGSCxJQUFBQSxHQUFHLEVBQUMscUJBREY7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFdBRko7QUFHRkYsSUFBQUEsS0FBSyxFQUFFO0FBSEwsR0FWSztBQWVYSyxFQUFBQSxFQUFFLEVBQUU7QUFDQUosSUFBQUEsR0FBRyxFQUFFLGdCQURMO0FBRUFDLElBQUFBLElBQUksRUFBRSxVQUZOO0FBR0FGLElBQUFBLEtBQUss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QU1vQixNQUFNLEdBQUdqQixpQkFBS2dCLE1BQUwsQ0FBWSxDQUFDdkIsR0FBRCxFQUFNVSxNQUFOLEVBQWNKLEVBQWQsQ0FBWixDQUFmOztBQUVBLElBQU1tQixPQUFPLEdBQUdsQixpQkFBS21CLFFBQUwsQ0FBYyxDQUFDUCxTQUFELEVBQVlsQixLQUFaLENBQWQsQ0FBaEI7O0FBRU8sSUFBTTBCLEtBQUssR0FBR3BCLGlCQUFLZ0IsTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBVUUsTUFBVixDQUFaLENBQWQ7Ozs7QUFDQSxJQUFNSSxHQUFHLEdBQUdyQixpQkFBS2dCLE1BQUwsQ0FBWSxDQUFDSSxLQUFELEVBQVFGLE9BQVIsQ0FBWixDQUFaOzs7O0FBQ0EsSUFBTUksTUFBTSxHQUFHdEIsaUJBQUtnQixNQUFMLENBQVksQ0FBQ0ksS0FBRCxFQUFRVCxRQUFSLEVBQWtCVCxLQUFsQixDQUFaLENBQWYiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkaGVvZFxcRG9jdW1lbnRzXFxHaXRIdWJcXEd1bHAtcHJhY3RpY2VcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gXCJndWxwXCI7XHJcbmltcG9ydCBncHVnIGZyb20gXCJndWxwLXB1Z1wiO1xyXG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcclxuaW1wb3J0IHdzIGZyb20gXCJndWxwLXdlYnNlcnZlclwiO1xyXG5pbXBvcnQgaW1hZ2UgZnJvbSBcImd1bHAtaW1hZ2VcIjtcclxuaW1wb3J0IHNhc3MgZnJvbSBcImd1bHAtc2Fzc1wiO1xyXG5pbXBvcnQgYXV0b3AgZnJvbSBcImd1bHAtYXV0b3ByZWZpeGVyXCI7XHJcbmltcG9ydCBtaW5pQ1NTIGZyb20gXCJndWxwLWNzc29cIjtcclxuaW1wb3J0IGJybyBmcm9tIFwiZ3VscC1icm9cIjtcclxuaW1wb3J0IGJhYmVsaWZ5IGZyb20gXCJiYWJlbGlmeVwiO1xyXG5pbXBvcnQgZ2hQYWdlcyBmcm9tIFwiZ3VscC1naC1wYWdlc1wiO1xyXG5cclxuc2Fzcy5jb21waWxlciA9IHJlcXVpcmUoXCJub2RlLXNhc3NcIik7XHJcblxyXG5jb25zdCByb3V0ZXMgPSB7XHJcbiAgICBwdWc6IHtcclxuICAgICAgICB3YXRjaDogXCJzcmMvKiovKi5wdWdcIixcclxuICAgICAgICBzcmM6IFwic3JjLyoucHVnXCIsXHJcbiAgICAgICAgZGVzdDogXCJidWlsZFwiXHJcbiAgICB9LFxyXG4gICAgaW1nOiB7XHJcbiAgICAgICAgc3JjOlwic3JjL2ltZy8qXCIsXHJcbiAgICAgICAgZGVzdDpcImJ1aWxkL2ltZ1wiXHJcbiAgICB9LFxyXG4gICAgc2Nzczoge1xyXG4gICAgICAgIHNyYzpcInNyYy9zY3NzL3N0eWxlLnNjc3NcIixcclxuICAgICAgICBkZXN0OiBcImJ1aWxkL2Nzc1wiLFxyXG4gICAgICAgIHdhdGNoOiBcInNyYy9zY3NzLyoqLyouc2Nzc1wiXHJcbiAgICB9LFxyXG4gICAganM6IHtcclxuICAgICAgICBzcmM6IFwic3JjL2pzL21haW4uanNcIixcclxuICAgICAgICBkZXN0OiBcImJ1aWxkL2pzXCIsXHJcbiAgICAgICAgd2F0Y2g6IFwic3JjLyoqLyouanNcIlxyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBwdWcgPSAoKSA9PiBcclxuICAgIGd1bHBcclxuICAgICAgICAuc3JjKHJvdXRlcy5wdWcuc3JjKVxyXG4gICAgICAgIC5waXBlKGdwdWcoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLnB1Zy5kZXN0KSk7XHJcblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJidWlsZC9cIiwgXCIucHVibGlzaFwiXSlcclxuXHJcbmNvbnN0IGltZyA9ICgpID0+IFxyXG4gICAgZ3VscFxyXG4gICAgICAgIC5zcmMocm91dGVzLmltZy5zcmMpXHJcbiAgICAgICAgLnBpcGUoaW1hZ2UoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSlcclxuXHJcbmNvbnN0IHN0eWxlcyA9ICgpID0+IFxyXG4gICAgZ3VscFxyXG4gICAgICAgIC5zcmMocm91dGVzLnNjc3Muc3JjKVxyXG4gICAgICAgIC5waXBlKHNhc3MoKS5vbihcImVycm9yXCIsIHNhc3MubG9nRXJyb3IpKVxyXG4gICAgICAgIC5waXBlKGF1dG9wKHtcclxuICAgICAgICAgICAgY2FzY2FkZTogZmFsc2UgXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUobWluaUNTUygpKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuc2Nzcy5kZXN0KSlcclxuXHJcbmNvbnN0IGpzID0gKCkgPT4gXHJcbiAgICBndWxwXHJcbiAgICAgICAgLnNyYyhyb3V0ZXMuanMuc3JjKVxyXG4gICAgICAgIC5waXBlKGJybyh7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogW1xyXG4gICAgICAgICAgICAgICAgYmFiZWxpZnkuY29uZmlndXJlKHsgcHJlc2V0czogW1wiQGJhYmVsL3ByZXNldC1lbnZcIl19KVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5qcy5kZXN0KSlcclxuXHJcbmNvbnN0IGdoZGVwbG95ID0gKCkgPT4gZ3VscC5zcmMoXCJidWlsZC8qKi8qXCIpLnBpcGUoZ2hQYWdlcygpKVxyXG5cclxuY29uc3Qgd2Vic2VydmVyID0gKCkgPT4gZ3VscC5zcmMoXCJidWlsZFwiKS5waXBlKHdzKHtsaXZlcmVsb2FkOnRydWUsIG9wZW46dHJ1ZX0pKVxyXG4gICAgXHJcbmNvbnN0IHdhdGNoID0gKCkgPT4ge1xyXG4gICAgICAgIGd1bHAud2F0Y2gocm91dGVzLnB1Zy53YXRjaCwgcHVnKTtcclxuICAgICAgICBndWxwLndhdGNoKHJvdXRlcy5pbWcuc3JjLCBpbWcpO1xyXG4gICAgICAgIGd1bHAud2F0Y2gocm91dGVzLnNjc3Mud2F0Y2gsIHN0eWxlcyk7XHJcbiAgICAgICAgZ3VscC53YXRjaChyb3V0ZXMuanMud2F0Y2gsIGpzKTtcclxuICAgIH1cclxuXHJcbmNvbnN0IHByZXBhcmUgPSBndWxwLnNlcmllcyhbY2xlYW4sIGltZ10pXHJcblxyXG5jb25zdCBhc3NldHMgPSBndWxwLnNlcmllcyhbcHVnLCBzdHlsZXMsIGpzXSlcclxuXHJcbmNvbnN0IHBvc3REZXYgPSBndWxwLnBhcmFsbGVsKFt3ZWJzZXJ2ZXIsIHdhdGNoXSlcclxuXHJcbmV4cG9ydCBjb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKFtwcmVwYXJlLCBhc3NldHNdKVxyXG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW2J1aWxkLCBwb3N0RGV2XSk7XHJcbmV4cG9ydCBjb25zdCBkZXBsb3kgPSBndWxwLnNlcmllcyhbYnVpbGQsIGdoZGVwbG95LCBjbGVhbl0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "js",
        "gulp",
        "pipe",
        "clean",
        "styles",
        "on",
        "logError",
        "cascade",
        "transform",
        "babelify",
        "configure",
        "presets",
        "ghdeploy",
        "webserver",
        "livereload",
        "open",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "build",
        "dev",
        "deploy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\dheod\\Documents\\GitHub\\Gulp-practice\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport gpug from \"gulp-pug\";\r\nimport del from \"del\";\r\nimport ws from \"gulp-webserver\";\r\nimport image from \"gulp-image\";\r\nimport sass from \"gulp-sass\";\r\nimport autop from \"gulp-autoprefixer\";\r\nimport miniCSS from \"gulp-csso\";\r\nimport bro from \"gulp-bro\";\r\nimport babelify from \"babelify\";\r\nimport ghPages from \"gulp-gh-pages\";\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\nconst routes = {\r\n    pug: {\r\n        watch: \"src/**/*.pug\",\r\n        src: \"src/*.pug\",\r\n        dest: \"build\"\r\n    },\r\n    img: {\r\n        src:\"src/img/*\",\r\n        dest:\"build/img\"\r\n    },\r\n    scss: {\r\n        src:\"src/scss/style.scss\",\r\n        dest: \"build/css\",\r\n        watch: \"src/scss/**/*.scss\"\r\n    },\r\n    js: {\r\n        src: \"src/js/main.js\",\r\n        dest: \"build/js\",\r\n        watch: \"src/**/*.js\"\r\n    }\r\n}\r\n\r\nconst pug = () => \r\n    gulp\r\n        .src(routes.pug.src)\r\n        .pipe(gpug())\r\n        .pipe(gulp.dest(routes.pug.dest));\r\n\r\nconst clean = () => del([\"build/\", \".publish\"])\r\n\r\nconst img = () => \r\n    gulp\r\n        .src(routes.img.src)\r\n        .pipe(image())\r\n        .pipe(gulp.dest(routes.img.dest))\r\n\r\nconst styles = () => \r\n    gulp\r\n        .src(routes.scss.src)\r\n        .pipe(sass().on(\"error\", sass.logError))\r\n        .pipe(autop({\r\n            cascade: false \r\n        }))\r\n        .pipe(miniCSS())\r\n        .pipe(gulp.dest(routes.scss.dest))\r\n\r\nconst js = () => \r\n    gulp\r\n        .src(routes.js.src)\r\n        .pipe(bro({\r\n            transform: [\r\n                babelify.configure({ presets: [\"@babel/preset-env\"]})\r\n            ]\r\n        }))\r\n        .pipe(gulp.dest(routes.js.dest))\r\n\r\nconst ghdeploy = () => gulp.src(\"build/**/*\").pipe(ghPages())\r\n\r\nconst webserver = () => gulp.src(\"build\").pipe(ws({livereload:true, open:true}))\r\n    \r\nconst watch = () => {\r\n        gulp.watch(routes.pug.watch, pug);\r\n        gulp.watch(routes.img.src, img);\r\n        gulp.watch(routes.scss.watch, styles);\r\n        gulp.watch(routes.js.watch, js);\r\n    }\r\n\r\nconst prepare = gulp.series([clean, img])\r\n\r\nconst assets = gulp.series([pug, styles, js])\r\n\r\nconst postDev = gulp.parallel([webserver, watch])\r\n\r\nexport const build = gulp.series([prepare, assets])\r\nexport const dev = gulp.series([build, postDev]);\r\nexport const deploy = gulp.series([build, ghdeploy, clean])"
      ]
    },
    "sourceType": "script",
    "mtime": 1595842186146
  }
}